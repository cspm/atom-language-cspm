# DO NOT EDIT THIS BY HAND. It is autogenerated from the textmate grammar at
# https://github.com/cspm/SublimeCSPM

fileTypes: [
  "csp"
]
name: "CSPM"
patterns: [
  {
    include: "#comments"
  }
  {
    match: "\\[(FD|T|F)="
    name: "keyword.other.semanticmodel.cspm"
  }
  {
    match: ":\\[(deadlock free|deadlock-free|deterministic|divergence free|divergence-free|livelock free|livelock-free|has trace)( \\[F\\]| \\[FD\\])?\\]"
    name: "keyword.other.assertion.cspm"
  }
  {
    match: "->|\\[\\]|\\|~\\||\\|\\|\\||\\[\\||\\|]|\\[\\[|\\]\\]|\\|\\||;|/\\\\|\\[>|\\\\|\\|\\\\"
    name: "keyword.operator.process.cspm"
  }
  {
    match: "{\\||\\|}|{|}|\\.\\.|:|#|<-|<->|==|\\!=|<|>|<=|>=|@|&"
    name: "keyword.operator.cspm"
  }
  {
    match: "\\b(assert|datatype|let|within|nametype|channel|external|transparent)\\b"
    name: "keyword.other.cspm"
  }
  {
    match: "\\b(if|then|else)\\b"
    name: "keyword.control.cspm"
  }
  {
    match: "\\.|\\!|\\?|\\$"
    name: "keyword.operator.channel.cspm"
  }
  {
    match: "\\b([0-9]+)\\b"
    name: "constant.numeric.cspm"
  }
  {
    match: "\\b(true|false|True|False)\\b"
    name: "support.constant.cspm"
  }
  {
    match: "\\b(length|length|null|head|tail|concat|union|inter|diff|Union|Inter|set|Set|Seq|empty|card|member|seq|elem|Int|Bool|Proc|Events|Char|true|false|True|False|STOP|SKIP|CHAOS|RUN|TSTOP|TSKIP|WAIT|extensions|productions|deter|failure_watchdog|loop|prioritise|prioritise_nocache|prioritisepo|trace_watchdog|timed_priority|explicate|lazyenumerate|diamond|normal|lazynorm|sbisim|tau_loop_factor|model_compress|wbisim|dbisim|mtransclose|relational_image|relational_inverse_image|transpose|chase|chase_nocache|error|show|emptyMap|mapFromList|mapLookup|mapMember|mapToList|mapUpdate|mapUpdateMultiple|mapDelete|Map)\\b"
    name: "support.function.prelude.cspm"
  }
  {
    match: ","
    name: "punctuation.separator.comma.cspm"
  }
  {
    captures:
      "1":
        name: "entity.name.function.cspm"
    match: "^\\s*([a-zA-Z0-9_']+)\\s*(\\(.*?\\)|)\\s*=[^=]"
    name: "meta.function.cspm"
  }
]
repository:
  block_comment:
    applyEndPatternLast: 1
    begin: "\\{-"
    captures:
      "0":
        name: "punctuation.definition.comment.cspm"
    end: "-\\}"
    name: "comment.block.cspm"
    patterns: [
      {
        include: "#block_comment"
      }
    ]
  comments:
    patterns: [
      {
        captures:
          "1":
            name: "punctuation.definition.comment.cspm"
        match: "(--).*$\\n?"
        name: "comment.line.double-dash.cspm"
      }
      {
        include: "#block_comment"
      }
    ]
scopeName: "source.cspm"
semanticClass: "source.cspm"
